/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/cl8lAOmv52N
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

"use client"
import { Label } from "@/components/ui/label"
import { Button } from "@/components/ui/button"
import Image from "next/image"
import { Checkbox } from "@/components/ui/checkbox"
import { z } from "zod"
import { useRouter } from "next/navigation"
import { SubmitHandler, useForm } from "react-hook-form"
import { zodResolver } from "@hookform/resolvers/zod"
import { signIn, useSession } from "next-auth/react"
import { toast } from "sonner"
import { Input } from "./ui/input"
import Link from "next/link"
import { Badge } from "./ui/badge"

const FormSchema = z.object({
  email: z.string().email("Please enter a valid email address"),
  password: z.string({
    required_error: "Please enter your password",
  }),
});

type InputType = z.infer<typeof FormSchema>;


export function SigninForm() {

  const {status} = useSession()

  const router=useRouter()

  if(status==='authenticated'){
    router.push('/observer')
  }

  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm<InputType>({
    resolver: zodResolver(FormSchema),
  });

  const onSubmit: SubmitHandler<InputType> = async (data) => {
    const result = await signIn("credentials", {
      redirect: false,
      username: data.email,
      password: data.password,
    });
    if (!result?.ok) {
      toast(result?.error);
      return;
    }

    toast.success("Successfully login in");
    router.push("/observer")
    
  };


  return (
    <div className=" ">
      <div className="z-50 p-6 h-full max-w-5xl m-auto rounded-2xl grid bg-white bg-opacity-20 grid-cols-1 md:grid-cols-2 gap-6  ">
        <form onSubmit={handleSubmit(onSubmit)} className="flex flex-col gap-4 rounded-2xl p-10">
          <div className="text-center flex-col items-center  p-6  sm:p-8">
            <div className="flex justify-center">
              <img src={'/logo.png'} className="animate-animated animate__backInDown" alt="logo" height={50} width={50} />
            </div>
              <h1 className="text-3xl text-white font-bold">Welcome to PO</h1>
              <p className="text-muted-foreground text-[green]">Sign in to your account to book your next adventure.</p>
            </div>

          <div className="flex flex-col text-white gap-2">
            <Badge className="bg-[black] w-fit p-2">
              <Label htmlFor="email">Email</Label>
            </Badge>
            
            <Input {...register("email")} className="rounded-xl shadow-2xl bg-transparent" id="email" type="email" placeholder="name@example.com" required />
          </div>
            <div className="flex text-white flex-col gap-2">
            <Badge className="bg-[green] w-fit p-2">
            <Label htmlFor="password">Password</Label>
            </Badge>
            
              

            <Input {...register("password")} className="w-full rounded-xl bg-transparent" id="password" type="password" required />
          </div>
          <Link
                href="#"
                className="text-sm mt-5 font-medium underline underline-offset-4 hover:text-primary"
                prefetch={false}
              >
                Forgot Password?
              </Link>
          <Button type="submit" className="w-full bg-[purple] text-white" disabled={isSubmitting}>
          {isSubmitting ? "Signing In..." : "Sign In"}
          </Button>
        </form>
        <Image src="/coding.png" alt="Travel illustration" width={600} height={400} className="h-full rounded-2xl shadow-2xl shadow-black w-full aspect-square" />
      </div>
    </div>
    
  )
}
