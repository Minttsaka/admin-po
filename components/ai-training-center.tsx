/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/ZrS4NUxFHBr
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { IBM_Plex_Sans } from 'next/font/google'
import { Chivo } from 'next/font/google'

ibm_plex_sans({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

"use client"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"

export function AiTrainingCenter() {
  return (
    <div className="flex min-h-[100dvh] flex-col bg-black text-white">
      <main className="flex-1">
        <section className="container py-12 md:p-16 lg:py-24">
          <div className="grid gap-8 md:grid-cols-2 lg:gap-12">
            <div className="space-y-4">
              <h1 className="text-3xl font-bold tracking-tighter md:text-4xl lg:text-5xl">Train Your AI Assistant</h1>
              <p className="text-muted-foreground md:text-xl">
                Customize your AI chatbot with a comprehensive training center. Add prompts, examples, and instructions
                to ensure your AI assistant is knowledgeable and helpful.
              </p>
              <div className="rounded-lg bg-muted p-4 shadow-sm">
               
                <form className="mt-4 space-y-4">
                 
                  <div>
                    <Label htmlFor="prompt-description">Prompt Description</Label>
                    <Textarea id="prompt-description" placeholder="Enter prompt description" rows={3} />
                  </div>
                  <div>
                    <Label htmlFor="prompt-content">Prompt Content</Label>
                    <Textarea id="prompt-content" placeholder="Enter prompt content" rows={5} />
                  </div>
                  <Button className="bg-[purple] w-full" type="submit" disabled>Save Prompt</Button>
                </form>
              </div>
            </div>
            <div className="grid gap-4">
              <div className="rounded-lg bg-muted p-4 shadow-sm">
                <div className="flex items-center justify-between">
                  <h3 className="text-lg font-medium">Prompt Library</h3>
                  <Button variant="ghost" size="icon">
                    <PlusIcon className="h-4 w-4" />
                    <span className="sr-only">Add Prompt</span>
                  </Button>
                </div>
                <p className="mt-10 text-sm text-[red] text-center">No prompt added</p>
                {/* <div className="mt-4 space-y-2">
                  <div className="flex items-center border-b justify-between rounded-md bg-background p-2 hover:bg-muted/50">
                    <div className="flex items-center gap-2">
                      <FileTextIcon className="h-5 w-5 text-muted-foreground" />
                      <span className="text-sm font-medium">General Knowledge</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <Button variant="ghost" size="icon">
                        <FilePenIcon className="h-4 w-4" />
                        <span className="sr-only">Edit Prompt</span>
                      </Button>
                      <Button variant="ghost" size="icon">
                        <TrashIcon className="h-4 w-4" />
                        <span className="sr-only">Delete Prompt</span>
                      </Button>
                    </div>
                  </div>
                  <div className="flex items-center border-b justify-between rounded-md bg-background p-2 hover:bg-muted/50">
                    <div className="flex items-center gap-2">
                      <FileTextIcon className="h-5 w-5 text-muted-foreground" />
                      <span className="text-sm font-medium">Customer Service</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <Button variant="ghost" size="icon">
                        <FilePenIcon className="h-4 w-4" />
                        <span className="sr-only">Edit Prompt</span>
                      </Button>
                      <Button variant="ghost" size="icon">
                        <TrashIcon className="h-4 w-4" />
                        <span className="sr-only">Delete Prompt</span>
                      </Button>
                    </div>
                  </div>
                  <div className="flex items-center border-b justify-between rounded-md bg-background p-2 hover:bg-muted/50">
                    <div className="flex items-center gap-2">
                      <FileTextIcon className="h-5 w-5 text-muted-foreground" />
                      <span className="text-sm font-medium">Technical Support</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <Button variant="ghost" size="icon">
                        <FilePenIcon className="h-4 w-4" />
                        <span className="sr-only">Edit Prompt</span>
                      </Button>
                      <Button variant="ghost" size="icon">
                        <TrashIcon className="h-4 w-4" />
                        <span className="sr-only">Delete Prompt</span>
                      </Button>
                    </div>
                  </div>
                </div> */}
              </div>
            </div>
          </div>
        </section>
      </main>
    </div>
  )
}

function BotIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 8V4H8" />
      <rect width="16" height="12" x="4" y="8" rx="2" />
      <path d="M2 14h2" />
      <path d="M20 14h2" />
      <path d="M15 13v2" />
      <path d="M9 13v2" />
    </svg>
  )
}


function FilePenIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v10" />
      <path d="M14 2v4a2 2 0 0 0 2 2h4" />
      <path d="M10.4 12.6a2 2 0 1 1 3 3L8 21l-4 1 1-4Z" />
    </svg>
  )
}


function FileTextIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" />
      <path d="M14 2v4a2 2 0 0 0 2 2h4" />
      <path d="M10 9H8" />
      <path d="M16 13H8" />
      <path d="M16 17H8" />
    </svg>
  )
}


function PlusIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}


function TrashIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 6h18" />
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
    </svg>
  )
}
