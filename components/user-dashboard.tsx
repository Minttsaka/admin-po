/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/xQoqs8JffUs
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/


import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import UserFirstSec from "./UserFirstSec"
import { prisma } from "@/lib/connect"
import { Bio, User } from "@prisma/client"
import EditUser from "./EditUser"
import { getServerSession } from "next-auth"
import { authOptions } from "@/lib/auth"

export async function UserDashboard({ id }:{ id:string }) {

  const session:any = await getServerSession(authOptions);
  const userFromSession = session.user as User;

  const [user, count] = await prisma.$transaction([
    prisma.user.findFirst({

      where:{
        id
      },
      include:{
        article:true,
        startDate:true,
        bio:true,
        salary:true,
        Event:true,
        vacancy:true,
      }
  
    }),
    prisma.article.count({ where: {
      authorId:id
    } }),
  ]);



  return (
    <div className="w-full ">
      <UserFirstSec user={user as User} count={count} />
      <div className="m-6 p-6 rounded-2xl bg-white">
      <Tabs defaultValue="about" className="border-b bg-gray-100 rounded-2xl p-6" >
        <TabsList className="flex bg-white shadow-2xl shadow-black p-2 rounded-2xl bg-opacity-20">
          <TabsTrigger value="about">About</TabsTrigger>
          <TabsTrigger value="posts">Posts</TabsTrigger>
          <TabsTrigger value="followers">Followers</TabsTrigger>
          <TabsTrigger value="following">Following</TabsTrigger>
          {id===userFromSession.id && <TabsTrigger value="edit">Edit Profile</TabsTrigger>}
        </TabsList>
        <TabsContent value="about" className="py-8">
          <div className="grid gap-4">
            <div>
              <h3 className="text-lg font-semibold">Biography</h3>
              <p className="text-muted-foreground max-w-lg">
                Bio has been disabled as we are working on this
              </p>
            </div>
            <div>
              <h3 className="text-lg font-semibold">Department</h3>
              <div className="flex text-white flex-wrap gap-2">
                <Badge className="bg-[green]">{user?.depName}</Badge>
              </div>
            </div>
            <div>
              <h3 className="text-lg font-semibold">Role</h3>
              <div className="flex text-white flex-wrap gap-2">
                <Badge className="bg-[green]">{user?.role}</Badge>
              </div>
            </div>
          </div>
        </TabsContent>
        <TabsContent value="posts" className="py-8 space-y-2">
        {user?.article.map(article=>(
                <div key={article.id} className='flex bg-[#0d2b0d] text-white p-4 rounded-2xl'>
                <div className='bg-white bg-opacity-20 flex items-center justify-center shadow-2xl p-3 rounded-2xl'>
                  <img src={`${article.img}`} className='h-20 rounded-xl' />
                </div>
                <div className='w-full'>
                    <h3 className='text-5xl font-extrabold ml-5 uppercase line-clamp-1'>{article.title}</h3>
                    <div className='flex justify-between gap-2 px-6 py-2 ml-2 mt-2 rounded-2xl bg-gray-100 text-black items-center'>
                        <div>
                            <h2 className='p-2 font-extrabold'>Category</h2>
                                <p className=''>{article.catSlug}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Views</h2>
                                <p className=''>{article.views}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Category</h2>
                                <p className=''>{article.catSlug}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Likes</h2>
                                <p className=''>{article.likes}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Category</h2>
                                <p className=''>{article.catSlug}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Is Announcent</h2>
                                <p className=''>{article.isAnnouncement ? "Yes" : "No"}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Is gossip</h2>
                              <p className=''>{article.isGossip ? "Yes" : "No"}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Is Editorial</h2>
                            <p className=''>{article.isEditorial ? "Yes" : "No"}</p>
                            </div>

                            <div>
                            <h2 className='p-2 font-extrabold'>Is Editor Pick</h2>
                            <p className=''>{article.isEditorsPick ? "Yes" : "No"}</p>
                            </div>
                            

                    </div>
                </div>
                
                
            </div>
              ))}
        </TabsContent>
        <TabsContent value="followers" className="py-8">

        </TabsContent>
        <TabsContent value="following" className="py-8">
   
        </TabsContent>
        <TabsContent value="edit" className="py-8">
          <EditUser />
        </TabsContent>
      </Tabs>
      </div>
      
    </div>
  )
}
